@use "/src/scss/colors" as colors;
@use "/src/scss/global";
@use "/src/scss/variables" as variables;

$border-color: colors.$input-border;
$background-color: colors.$neutral-1;

.component-select {
  text-align: left;
  font-size: 0.9rem;
  position: relative;

  .select-label {
    position: absolute;
    top: 0;
    left: 0.8rem;
    transform: translateY(-50%);
    max-width: 90%;
    background: linear-gradient(
      0deg,
      $background-color (calc(50%)),
      transparent 50%
    );
    font-weight: 600;
    font-size: 0.75rem;
    padding: 0 0.2rem;
    color: colors.$input-border;
    transition: 0.1s color ease-in-out;

    .asterisk {
      color: colors.$secondary-2;
    }
  }

  &.error {
    .select-label {
      color: colors.$error;
    }
    .select-input {
      border-color: colors.$error;
    }

    small.error {
      font-size: 12px;
      display: flex;
      gap: 0.25rem;
      font-weight: 500;
      svg {
        display: block;
      }
    }

    .svg-alert {
      max-width: 0.9rem;
      max-height: 0.9rem;
      path {
        stroke: colors.$error;
      }
      circle {
        fill: colors.$error;
      }
    }
  }

  &:has(.dropdown) {
    .select-label {
      color: colors.$primary-1;
    }

    .select-input {
      border-color: colors.$primary-1;
    }
  }

  .select-input {
    box-sizing: border-box;
    padding: 0.276rem 1rem;
    padding-left: 0.4rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    user-select: none;
    border-radius: 8px;
    border: 1px solid $border-color;
    background: transparent;
    font-size: variables.$input-font-size;
    background-color: $background-color;
    height: variables.$input-height;

    .content-input {
      display: flex;
      gap: 0.5rem;
      padding-left: 0.2rem;
      padding-top: 0.1rem;
      align-items: center;

      max-width: 85%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;

      .selected-options {
        display: flex;
        gap: 5px;
        align-items: center;

        .plus {
          background-color: colors.$neutral-9;
          color: colors.$secondary-3;
          padding: 0.15rem 0.4rem;
          font-size: 14px;
          font-weight: 500;
          border-radius: 16px;
        }
      }

      .selected-option {
        color: colors.$input-text;
        font-size: variables.$input-font-size;
        font-weight: 400;
        line-height: 23px;
        text-align: left;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      .placeholder {
        color: colors.$neutral-8;
        opacity: 0.5;
      }
    }

    .icons {
      display: flex;
      align-items: center;
      gap: 0.3rem;
      .icon {
        transform: rotate(0deg);
        transition: transform 0.1s ease-in;
        height: 12px;
        width: 12px;

        &.cross {
          height: 0.7rem;
          width: 0.7rem;
          cursor: pointer;
        }

        path {
          fill: colors.$neutral-5;
        }
      }

      .icon.upside {
        transform: rotate(180deg);
        transition: transform 0.1s ease-in;
      }

      .icon.hoverable > svg {
        cursor: pointer;
      }
    }
  }
}

.component.dropdown {
  transform: translateY(4px);
  border: 1px solid $border-color;
  border-radius: 0.5rem;
  overflow: auto;
  background-color: colors.$neutral-1;
  z-index: 10001;
  position: absolute;

  &:has(.search-box) {
    .select.header-content {
      border-top: 1px solid colors.$neutral-3;
    }
  }

  .select.header-content {
    display: flex;
    align-items: center;
    border-bottom: 1px solid colors.$neutral-3;
    padding-block: 12px;
    padding-inline: 16px;
  }

  .search-box {
    padding: 5px;

    input {
      outline: none;
      width: 100%;
      box-sizing: border-box;
      padding: 0.3rem;
      border-radius: 0.4rem;
      font-size: variables.$input-font-size;
      color: colors.$input-text;
      border: 1px solid $border-color;
      height: 2rem;
    }
  }
  .options {
    padding: 0.3rem 0;
    max-height: 10rem;
    overflow: auto;

    .loading {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0.2rem;
    }

    .no-items {
      padding: 0.5rem;
      display: flex;
      span {
        display: block;
      }
    }

    // &:not(* > :hover) > .option:first-child:not(.selected) {
    //   background-color: colors.$neutral-2;
    //   color: colors.$primary-1;
    // }

    .option {
      padding: 0.4rem 0.4rem;
      cursor: pointer;
      user-select: none;
      color: colors.$neutral-5;
      font-size: variables.$input-font-size;
      line-height: 20px;
      font-weight: 500;
      letter-spacing: 0.0015em;
      white-space: wrap;
      overflow: hidden;
      text-overflow: ellipsis;

      &:hover:not(.selected) {
        background-color: rgba(colors.$primary-1, 0.1);
      }

      &.disabled {
        opacity: 0.3;
        pointer-events: none;
      }

      .checkbox-team {
        display: flex;
        gap: 10px;
        cursor: pointer;
        padding: 0.5rem;
        margin: -0.5rem;
        padding-left: 1.15rem;

        span {
          align-items: center;
          display: flex;
          flex-wrap: nowrap;
          margin-top: -1px;
          color: colors.$neutral-5;
          font-size: 14px;
          font-weight: 500;
        }
      }
    }
  }

  .option.selected {
    background-color: colors.$primary-1;
    color: colors.$neutral-1;

    &:has(.checkbox-team) {
      background-color: rgba(colors.$primary-1, 0.05);
      color: colors.$neutral-5;
    }
  }

  &.small {
    .options {
      max-height: 5rem;
    }
  }

  &.upside {
    bottom: 2.7rem;
    top: unset;
    flex-direction: column-reverse;
  }
}

.component-tag {
  background-color: colors.$neutral-9;
  border-radius: 1rem;
  display: flex;
  width: fit-content;
  align-items: center;
  gap: 0.5rem;
  padding: 0 0.4rem;

  .tag-content {
    font-size: 12px;
    font-weight: 500;
    color: colors.$secondary-3;
    white-space: nowrap;
    text-overflow: ellipsis;
    max-width: 70px;
    overflow: hidden;
  }

  .remove {
    display: flex;
    cursor: pointer;
    height: 7px;
    width: 7px;

    path {
      stroke: colors.$neutral-7;
    }
    &:hover {
      transform: translateY(-1px);
    }
  }
}

.component-select.disabled {
  pointer-events: none;
  opacity: 0.3;
}
